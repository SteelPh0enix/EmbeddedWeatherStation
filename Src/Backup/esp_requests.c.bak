/*
 * esp_requests.c
 *
 *  Created on: 05.07.2019
 *      Author: steelph0enix
 */

#include "esp_requests.h"
#include "usart.h"
#include "ssd1306.h"
#include <stdio.h>
#include <string.h>

#define ESP_REQUESTS_STRBUFFER_LEN 32

char uartReceiveStrBuffer[ESP_REQUESTS_STRBUFFER_LEN];
char const* getTimeDateRequest = "getTimeDate()\n";

TimeDate getTimeDate(uint32_t timeout) {
	size_t length = strlen(getTimeDateRequest);
	HAL_UART_Transmit(&huart1, (uint8_t*) getTimeDateRequest, length, timeout);
	HAL_UART_Receive(&huart1, (uint8_t*) uartReceiveStrBuffer, ESP_REQUESTS_STRBUFFER_LEN,
			timeout);


	TimeDate timeDate;
	int hour, min, sec, year, month, day, weekday;
	char* beginningOfData = uartReceiveStrBuffer;
	while(*beginningOfData != '>' && beginningOfData < uartReceiveStrBuffer + ESP_REQUESTS_STRBUFFER_LEN) { beginningOfData++; }
	if (beginningOfData == uartReceiveStrBuffer + ESP_REQUESTS_STRBUFFER_LEN) {
		timeDate.success = false;
		return timeDate;
	}

	int sscanfResult = sscanf(beginningOfData, "> %d:%d:%d/%d-%d-%d/%d", &hour, &min, &sec, &year, &month, &day, &weekday);

	timeDate.success = (sscanfResult != 0 && sscanfResult != EOF);
	timeDate.date.Date = (uint8_t)(day);
	timeDate.date.Month = (uint8_t)(month);
	timeDate.date.Year = (uint8_t)(year - 2000);
	timeDate.date.WeekDay = (uint8_t)(weekday);
	timeDate.time.Hours = (uint8_t)(hour);
	timeDate.time.Minutes = (uint8_t)(min);
	timeDate.time.Seconds = (uint8_t)(sec);
	return timeDate;
}
